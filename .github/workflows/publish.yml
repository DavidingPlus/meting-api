name: Publish
on:
  push:
    branches:
      - "main"
      - "dev"
    tags:
      - "v*"

  # workflow_dispatch 是 GitHub 的手动触发 CI 机制，可以与 inputs 预定义的变量一起使用，对 push 触发的 CI 不生效。
  workflow_dispatch:
    inputs:
      docker:
        description: "Deploy to DockerHub"
        required: true
        type: boolean
        default: false
      deno:
        description: "Deploy to deno"
        required: true
        type: boolean
        default: true

jobs:
  unit-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['18.x', '19.x', '20.x', '21.x']

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm i
      - run: npm run build:all
      - run: npm test

  test-docker:
    runs-on: ubuntu-latest
    needs: [unit-test]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          load: true
          push: false
          tags: meting-api:latest
          context: .

      - name: Test Docker image
        run: bash scripts/docker/test-docker.sh
        env:
          TAG: latest

      - name: Export Docker image
        run: docker save meting-api:latest | gzip -1cf > meting.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: meting.tar.gz
          path: meting.tar.gz
          retention-days: 1

  upload-art:
    needs: [test-docker]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm i
      - run: npm run build:all

      - uses: actions/upload-artifact@v4
        with:
          name: cloudflare-workers.js
          path: dist/cloudflare-workers.js
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: deno.js
          path: dist/deno.js
          retention-days: 1

  deploy-to-deno:
    needs: [upload-art]
    # 参考链接：https://docs.github.com/zh/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
    # 需求是不让下面的 release-docker 任务在 push 触发的 CI 中执行。
    # 在 jobs.<job_id>.if 中没办法使用 env 环境变量，因此没办法根据变量的值处理 push 触发的 CI 是否进行这一步。jobs.<job_id>.steps.if 是可以使用 env 的，因此只能在 steps 里面处理了。
    if: ${{ inputs.deno ||  ( github.event_name == 'push') }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      DEPLOY_DENO_PUSH: false

    steps:
      - uses: actions/download-artifact@v4
        if: ${{ DEPLOY_DENO_PUSH }}
        with:
          name: deno.js
      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: meting-api-davidingplus
          entrypoint: deno.js

  release-docker:
    needs: [test-docker]
    if: ${{ inputs.docker  ||  github.event_name == 'push' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/meting-api

      - name: Push docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/meting-api:latest
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
